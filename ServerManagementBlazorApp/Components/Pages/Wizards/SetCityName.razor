@page "/cityname"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

@using ServerManagementBlazorApp.StateStore

@inject SessionStorage sessionStorage

@inject ContainerStorage containerStorage

<h3>City Name</h3>

@if(!string.IsNullOrWhiteSpace(errorMessage))
{
	<div class="alert alert-danger">
		@errorMessage
	</div>
}

@if(server is not null)
{

	<FieldComponent Label="City">
		<Control> <input type="text" @bind-value="server!.City" class="form-control" /></Control>
	</FieldComponent>
}

<br />

<button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>
	

@code {

	private Server? server;

	private string? errorMessage;

	private string? cityName;

	[SupplyParameterFromQuery]
	private string? ServerName { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}

	// protected override void OnAfterRender(bool firstRender)
	// {
	// 	if(firstRender)
	// 	{
	// 		if (String.IsNullOrWhiteSpace(ServerName))
	// 		{
	// 			this.errorMessage = "Server name wasn't provided";
	// 			StateHasChanged();
	// 		}
	// 	}
	// }

	protected override void OnAfterRender(bool firstRender)
	{
		if(firstRender)
		{
			this.server = this.containerStorage.GetServer();
			StateHasChanged();
		}
	}

	private void GoNext()
	{
		if(string.IsNullOrWhiteSpace(server!.Name))
		{
			this.errorMessage = "Server name wasn't provided";
			StateHasChanged();
		}
		else if (string.IsNullOrWhiteSpace(server!.City))
		{
			this.errorMessage = "City Name is required";
		}

		else
		{
			containerStorage.SetServer(server);
			NavigationManager.NavigateTo($"/serverstatus?servername={server.Name}&cityname={server.City}");
		}
	}
}
