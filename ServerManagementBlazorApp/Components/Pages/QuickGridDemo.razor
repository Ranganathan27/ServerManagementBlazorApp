@page "/quickgrid"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject IServersEFCoreRepository ServersEFCoreRepository
<h3>QuickGridDemo</h3>

@if (servers != null)
{
	<QuickGrid Items="servers.AsQueryable()" Class="table table-striped" Pagination="@paginationState">
		<PropertyColumn Property="s => s.Name" Sortable="true"></PropertyColumn>
		<PropertyColumn Property="s => s.City" Sortable="true"></PropertyColumn>
		<TemplateColumn Title="Status" Sortable="true" SortBy="GridSort<Models.Server>.ByAscending(x=> x.IsOnline)">
			@if(context.IsOnline)
			{
				<div style="color:green">Online</div>
			}
			else
			{
				<div style="color:red">Offline</div>
			}
		</TemplateColumn>
		<TemplateColumn Title="People Online">
			@if (context.IsOnline)
			{
				Random random = new Random();
				int randomNumber = random.Next(0, 1000);
				<text>@randomNumber</text>
			}
			else
			{
				<text>N/A</text>

			}
		</TemplateColumn>

		<TemplateColumn>
			@if (context.IsOnline)
			{
				<button type="button" class="btn btn-outline-danger" @onclick="@(()=>{context.IsOnline = false;})"> Turn Off</button>
			}
			else
			{
				<button type="button" class="btn btn-outline-success" @onclick="@(()=>{context.IsOnline = true;})"> Turn On</button>
			}
		</TemplateColumn>
		<TemplateColumn>
			<a href="/Server/@(context.ServerId)" class="btn btn-primary">Edit</a>
		</TemplateColumn>

		<TemplateColumn>
			<ChildContent Context ="server">
				<EditForm Model="server"
				FormName="@($"form-Server={server.ServerId}")"
				OnValidSubmit="@(() => {DeleteServer(server.ServerId);})">
					<button type="submit" class="btn btn-danger">Delete Server</button>
				</EditForm>
			</ChildContent>
		</TemplateColumn>
	</QuickGrid>
	<Paginator State="paginationState"></Paginator>
}

@code {

	private List<Models.Server>? servers;

	protected override void OnAfterRender(bool firstRender)
	{
		if(firstRender)
		{
			servers = ServersEFCoreRepository.GetAllServers();
		}
	}

	private PaginationState paginationState = new PaginationState { ItemsPerPage = 5 };

	/// <summary>
	///
	/// </summary>
	/// <param name="id"></param>
	private void DeleteServer(int id)
	{
		if (id > 0)
		{
			ServersEFCoreRepository.DeleteServer(id);
			NavigationManager.Refresh();
			NavigationManager.NavigateTo("/quickgrid", true);
		}
	}

}
